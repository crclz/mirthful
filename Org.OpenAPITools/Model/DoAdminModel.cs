/* 
 * TheAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DoAdminModel
    /// </summary>
    [DataContract]
    public partial class DoAdminModel :  IEquatable<DoAdminModel>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name="action", EmitDefaultValue=false)]
        public AdminAction? Action { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DoAdminModel" /> class.
        /// </summary>
        /// <param name="postId">postId.</param>
        /// <param name="action">action.</param>
        /// <param name="status">status.</param>
        public DoAdminModel(string postId = default(string), AdminAction action = default(AdminAction), bool status = default(bool))
        {
            this.PostId = postId;
            this.Action = action;
            this.Status = status;
        }
        
        /// <summary>
        /// Gets or Sets PostId
        /// </summary>
        [DataMember(Name="postId", EmitDefaultValue=true)]
        public string PostId { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public bool Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DoAdminModel {\n");
            sb.Append("  PostId: ").Append(PostId).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DoAdminModel);
        }

        /// <summary>
        /// Returns true if DoAdminModel instances are equal
        /// </summary>
        /// <param name="input">Instance of DoAdminModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DoAdminModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PostId == input.PostId ||
                    (this.PostId != null &&
                    this.PostId.Equals(input.PostId))
                ) && 
                (
                    this.Action == input.Action ||
                    this.Action.Equals(input.Action)
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PostId != null)
                    hashCode = hashCode * 59 + this.PostId.GetHashCode();
                hashCode = hashCode * 59 + this.Action.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
